// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  fullName        String
  username        String            @unique
  password        String
  phone           String?           @unique
  address         String?
  role            Role              @relation(fields: [roleId], references: [id])
  roleId          Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  VerificatedUser VerificatedUser[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model VerificatedUser {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  video       String
  poster      String
  content     String
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  Product     Product[]
}

model Product {
  id          Int                  @id @default(autoincrement())
  name        String
  description String
  price       Float
  url         String?
  information ProductInformation[]
  poster      String
  images      ProductImage[]
  productType ProductType
  category    Category             @relation(fields: [categoryId], references: [id])
  Post        Post?                @relation(fields: [postId], references: [id])
  postId      Int?
  categoryId  Int
  createdAt   DateTime             @default(now())
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())
}

model ProductInformation {
  id        Int      @id @default(autoincrement())
  name      String
  value     String
  Product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int?
  createdAt DateTime @default(now())
}

enum ProductType {
  SOFTWARE
  HARDWARE
}
